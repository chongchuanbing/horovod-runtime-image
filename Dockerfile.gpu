#FROM nvidia/cuda:10.1-devel-ubuntu18.04

ARG REGISTRY
ARG NCCL_VERSION=2.4.7-1+cuda10.0
ARG CUDA_VERSION=10.0
ARG CUDNN_VERSION=7
ARG PYTHON_VERSION=3.6
ARG UBUNTU_VERSION=18.04

FROM ${REGISTRY}/nvidia-cuda-runtime:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-py${PYTHON_VERSION}-ubuntu${UBUNTU_VERSION}

MAINTAINER chongchuanbing@126.com

ARG HOROVOD_VERSION=0.19.0

# Set default shell to /bin/bash
SHELL ["/bin/bash", "-cu"]

#ENV HOROVOD_WITHOUT_TENSORFLOW=1
#ENV HOROVOD_WITHOUT_PYTORCH=1
#ENV HOROVOD_WITHOUT_MXNET=1

# Install Open MPI
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    wget \
    gcc \
    g++ \
    make \
#    libnccl2=${NCCL_VERSION} \
#    libnccl-dev=${NCCL_VERSION} \
#    libnccl2 \
#    libnccl-dev \
    build-essential \
#    libbluetooth-dev \
#    libbz2-dev \
#    libc6-dev \
#    libexpat1-dev \
#    libffi-dev \
#    libgdbm-dev \
#    liblzma-dev \
#    libncursesw5-dev \
#    libreadline-dev \
#    libsqlite3-dev \
#    libssl-dev \
    && mkdir /tmp/openmpi && \
    cd /tmp/openmpi && \
    wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.0.tar.gz && \
    tar zxf openmpi-4.0.0.tar.gz && \
    cd openmpi-4.0.0 && \
    ./configure --enable-orterun-prefix-by-default && \
    make -j $(nproc) all && \
    make install && \
    ldconfig && \
    rm -rf /tmp/openmpi && \
    apt-get remove -y --purge wget gcc g++ make && \
    rm -rf /var/lib/apt/lists/*

# Install OpenSSH for MPI to communicate between containers
RUN apt-get update && \
    apt-get install -y --no-install-recommends openssh-client openssh-server && \
    mkdir -p /var/run/sshd

# Allow OpenSSH to talk to containers without asking for confirmation
RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
    echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new && \
    mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config

ENV HOROVOD_CUDA_HOME=/usr/local/cuda

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    make \
    gcc \
    g++-4.8 && \
    pip install --no-cache-dir tensorflow==1.14.0 -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com && \
    HOROVOD_GPU_OPERATIONS=NCCL \
         pip install --no-cache-dir horovod==${HOROVOD_VERSION} -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com && \
         pip uninstall -y tensorflow && \
    apt-get remove -y --purge make gcc g++ && \
    rm -rf /var/lib/apt/lists/*

# Install Horovod, temporarily using CUDA stubs
#RUN apt-get update && \
#    apt-get install -y --no-install-recommends \
#    make \
#    cmake \
#    gcc \
#    g++ \
#    && ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs && \
#    HOROVOD_GPU_OPERATIONS=NCCL \
#         pip install --no-cache-dir horovod==${HOROVOD_VERSION} -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com && \
#    ldconfig &&\
#    apt-get remove -y --purge make cmake gcc g++ && \
#    rm -rf /var/lib/apt/lists/*
